package V5TajweedFactoryOnto;

import java.net.URI;
import java.util.Collection;
import javax.xml.datatype.XMLGregorianCalendar;

import org.protege.owl.codegeneration.WrappedIndividual;

import org.semanticweb.owlapi.model.OWLNamedIndividual;
import org.semanticweb.owlapi.model.OWLOntology;

/**
 * 
 * <p>
 * Generated by Protege (http://protege.stanford.edu). <br>
 * Source Class: RuleOccurrence <br>
 * @version generated on Thu Jul 09 05:14:13 PKT 2020 by Ramsha
 */

public interface RuleOccurrence extends WrappedIndividual {

    /* ***************************************************
     * Property http://www.tajweedontology.org/ontologies/rules#followedBy
     */
     
    /**
     * Gets all property values for the followedBy property.<p>
     * 
     * @returns a collection of values for the followedBy property.
     */
    Collection<? extends WrappedIndividual> getFollowedBy();

    /**
     * Checks if the class has a followedBy property value.<p>
     * 
     * @return true if there is a followedBy property value.
     */
    boolean hasFollowedBy();

    /**
     * Adds a followedBy property value.<p>
     * 
     * @param newFollowedBy the followedBy property value to be added
     */
    void addFollowedBy(WrappedIndividual newFollowedBy);

    /**
     * Removes a followedBy property value.<p>
     * 
     * @param oldFollowedBy the followedBy property value to be removed.
     */
    void removeFollowedBy(WrappedIndividual oldFollowedBy);


    /* ***************************************************
     * Property http://www.tajweedontology.org/ontologies/rules#hasRuleOccurrence
     */
     
    /**
     * Gets all property values for the hasRuleOccurrence property.<p>
     * 
     * @returns a collection of values for the hasRuleOccurrence property.
     */
    Collection<? extends WrappedIndividual> getHasRuleOccurrence();

    /**
     * Checks if the class has a hasRuleOccurrence property value.<p>
     * 
     * @return true if there is a hasRuleOccurrence property value.
     */
    boolean hasHasRuleOccurrence();

    /**
     * Adds a hasRuleOccurrence property value.<p>
     * 
     * @param newHasRuleOccurrence the hasRuleOccurrence property value to be added
     */
    void addHasRuleOccurrence(WrappedIndividual newHasRuleOccurrence);

    /**
     * Removes a hasRuleOccurrence property value.<p>
     * 
     * @param oldHasRuleOccurrence the hasRuleOccurrence property value to be removed.
     */
    void removeHasRuleOccurrence(WrappedIndividual oldHasRuleOccurrence);


    /* ***************************************************
     * Property http://www.tajweedontology.org/ontologies/rules#hasRuleType
     */
     
    /**
     * Gets all property values for the hasRuleType property.<p>
     * 
     * @returns a collection of values for the hasRuleType property.
     */
    Collection<? extends WrappedIndividual> getHasRuleType();

    /**
     * Checks if the class has a hasRuleType property value.<p>
     * 
     * @return true if there is a hasRuleType property value.
     */
    boolean hasHasRuleType();

    /**
     * Adds a hasRuleType property value.<p>
     * 
     * @param newHasRuleType the hasRuleType property value to be added
     */
    void addHasRuleType(WrappedIndividual newHasRuleType);

    /**
     * Removes a hasRuleType property value.<p>
     * 
     * @param oldHasRuleType the hasRuleType property value to be removed.
     */
    void removeHasRuleType(WrappedIndividual oldHasRuleType);


    /* ***************************************************
     * Property http://www.tajweedontology.org/ontologies/rules#involveHarakat
     */
     
    /**
     * Gets all property values for the involveHarakat property.<p>
     * 
     * @returns a collection of values for the involveHarakat property.
     */
    Collection<? extends WrappedIndividual> getInvolveHarakat();

    /**
     * Checks if the class has a involveHarakat property value.<p>
     * 
     * @return true if there is a involveHarakat property value.
     */
    boolean hasInvolveHarakat();

    /**
     * Adds a involveHarakat property value.<p>
     * 
     * @param newInvolveHarakat the involveHarakat property value to be added
     */
    void addInvolveHarakat(WrappedIndividual newInvolveHarakat);

    /**
     * Removes a involveHarakat property value.<p>
     * 
     * @param oldInvolveHarakat the involveHarakat property value to be removed.
     */
    void removeInvolveHarakat(WrappedIndividual oldInvolveHarakat);


    /* ***************************************************
     * Property http://www.tajweedontology.org/ontologies/rules#involveLetter
     */
     
    /**
     * Gets all property values for the involveLetter property.<p>
     * 
     * @returns a collection of values for the involveLetter property.
     */
    Collection<? extends WrappedIndividual> getInvolveLetter();

    /**
     * Checks if the class has a involveLetter property value.<p>
     * 
     * @return true if there is a involveLetter property value.
     */
    boolean hasInvolveLetter();

    /**
     * Adds a involveLetter property value.<p>
     * 
     * @param newInvolveLetter the involveLetter property value to be added
     */
    void addInvolveLetter(WrappedIndividual newInvolveLetter);

    /**
     * Removes a involveLetter property value.<p>
     * 
     * @param oldInvolveLetter the involveLetter property value to be removed.
     */
    void removeInvolveLetter(WrappedIndividual oldInvolveLetter);


    /* ***************************************************
     * Property http://www.tajweedontology.org/ontologies/rules#occurAt
     */
     
    /**
     * Gets all property values for the occurAt property.<p>
     * 
     * @returns a collection of values for the occurAt property.
     */
    Collection<? extends WrappedIndividual> getOccurAt();

    /**
     * Checks if the class has a occurAt property value.<p>
     * 
     * @return true if there is a occurAt property value.
     */
    boolean hasOccurAt();

    /**
     * Adds a occurAt property value.<p>
     * 
     * @param newOccurAt the occurAt property value to be added
     */
    void addOccurAt(WrappedIndividual newOccurAt);

    /**
     * Removes a occurAt property value.<p>
     * 
     * @param oldOccurAt the occurAt property value to be removed.
     */
    void removeOccurAt(WrappedIndividual oldOccurAt);


    /* ***************************************************
     * Property http://www.tajweedontology.org/ontologies/rules#precededBy
     */
     
    /**
     * Gets all property values for the precededBy property.<p>
     * 
     * @returns a collection of values for the precededBy property.
     */
    Collection<? extends WrappedIndividual> getPrecededBy();

    /**
     * Checks if the class has a precededBy property value.<p>
     * 
     * @return true if there is a precededBy property value.
     */
    boolean hasPrecededBy();

    /**
     * Adds a precededBy property value.<p>
     * 
     * @param newPrecededBy the precededBy property value to be added
     */
    void addPrecededBy(WrappedIndividual newPrecededBy);

    /**
     * Removes a precededBy property value.<p>
     * 
     * @param oldPrecededBy the precededBy property value to be removed.
     */
    void removePrecededBy(WrappedIndividual oldPrecededBy);


    /* ***************************************************
     * Property http://www.tajweedontology.org/ontologies/rules#hasHaraktPosition
     */
     
    /**
     * Gets all property values for the hasHaraktPosition property.<p>
     * 
     * @returns a collection of values for the hasHaraktPosition property.
     */
    Collection<? extends Integer> getHasHaraktPosition();

    /**
     * Checks if the class has a hasHaraktPosition property value.<p>
     * 
     * @return true if there is a hasHaraktPosition property value.
     */
    boolean hasHasHaraktPosition();

    /**
     * Adds a hasHaraktPosition property value.<p>
     * 
     * @param newHasHaraktPosition the hasHaraktPosition property value to be added
     */
    void addHasHaraktPosition(Integer newHasHaraktPosition);

    /**
     * Removes a hasHaraktPosition property value.<p>
     * 
     * @param oldHasHaraktPosition the hasHaraktPosition property value to be removed.
     */
    void removeHasHaraktPosition(Integer oldHasHaraktPosition);



    /* ***************************************************
     * Property http://www.tajweedontology.org/ontologies/rules#hasLetterPosition
     */
     
    /**
     * Gets all property values for the hasLetterPosition property.<p>
     * 
     * @returns a collection of values for the hasLetterPosition property.
     */
    Collection<? extends Integer> getHasLetterPosition();

    /**
     * Checks if the class has a hasLetterPosition property value.<p>
     * 
     * @return true if there is a hasLetterPosition property value.
     */
    boolean hasHasLetterPosition();

    /**
     * Adds a hasLetterPosition property value.<p>
     * 
     * @param newHasLetterPosition the hasLetterPosition property value to be added
     */
    void addHasLetterPosition(Integer newHasLetterPosition);

    /**
     * Removes a hasLetterPosition property value.<p>
     * 
     * @param oldHasLetterPosition the hasLetterPosition property value to be removed.
     */
    void removeHasLetterPosition(Integer oldHasLetterPosition);



    /* ***************************************************
     * Property http://www.tajweedontology.org/ontologies/rules#involveSurahNo
     */
     
    /**
     * Gets all property values for the involveSurahNo property.<p>
     * 
     * @returns a collection of values for the involveSurahNo property.
     */
    Collection<? extends Integer> getInvolveSurahNo();

    /**
     * Checks if the class has a involveSurahNo property value.<p>
     * 
     * @return true if there is a involveSurahNo property value.
     */
    boolean hasInvolveSurahNo();

    /**
     * Adds a involveSurahNo property value.<p>
     * 
     * @param newInvolveSurahNo the involveSurahNo property value to be added
     */
    void addInvolveSurahNo(Integer newInvolveSurahNo);

    /**
     * Removes a involveSurahNo property value.<p>
     * 
     * @param oldInvolveSurahNo the involveSurahNo property value to be removed.
     */
    void removeInvolveSurahNo(Integer oldInvolveSurahNo);



    /* ***************************************************
     * Property http://www.tajweedontology.org/ontologies/rules#involveVerseNo
     */
     
    /**
     * Gets all property values for the involveVerseNo property.<p>
     * 
     * @returns a collection of values for the involveVerseNo property.
     */
    Collection<? extends Integer> getInvolveVerseNo();

    /**
     * Checks if the class has a involveVerseNo property value.<p>
     * 
     * @return true if there is a involveVerseNo property value.
     */
    boolean hasInvolveVerseNo();

    /**
     * Adds a involveVerseNo property value.<p>
     * 
     * @param newInvolveVerseNo the involveVerseNo property value to be added
     */
    void addInvolveVerseNo(Integer newInvolveVerseNo);

    /**
     * Removes a involveVerseNo property value.<p>
     * 
     * @param oldInvolveVerseNo the involveVerseNo property value to be removed.
     */
    void removeInvolveVerseNo(Integer oldInvolveVerseNo);



    /* ***************************************************
     * Property http://www.tajweedontology.org/ontologies/rules#involveWord
     */
     
    /**
     * Gets all property values for the involveWord property.<p>
     * 
     * @returns a collection of values for the involveWord property.
     */
    Collection<? extends Object> getInvolveWord();

    /**
     * Checks if the class has a involveWord property value.<p>
     * 
     * @return true if there is a involveWord property value.
     */
    boolean hasInvolveWord();

    /**
     * Adds a involveWord property value.<p>
     * 
     * @param newInvolveWord the involveWord property value to be added
     */
    void addInvolveWord(Object newInvolveWord);

    /**
     * Removes a involveWord property value.<p>
     * 
     * @param oldInvolveWord the involveWord property value to be removed.
     */
    void removeInvolveWord(Object oldInvolveWord);



    /* ***************************************************
     * Property http://www.tajweedontology.org/ontologies/rules#involveWordNo
     */
     
    /**
     * Gets all property values for the involveWordNo property.<p>
     * 
     * @returns a collection of values for the involveWordNo property.
     */
    Collection<? extends Integer> getInvolveWordNo();

    /**
     * Checks if the class has a involveWordNo property value.<p>
     * 
     * @return true if there is a involveWordNo property value.
     */
    boolean hasInvolveWordNo();

    /**
     * Adds a involveWordNo property value.<p>
     * 
     * @param newInvolveWordNo the involveWordNo property value to be added
     */
    void addInvolveWordNo(Integer newInvolveWordNo);

    /**
     * Removes a involveWordNo property value.<p>
     * 
     * @param oldInvolveWordNo the involveWordNo property value to be removed.
     */
    void removeInvolveWordNo(Integer oldInvolveWordNo);



    /* ***************************************************
     * Common interfaces
     */

    OWLNamedIndividual getOwlIndividual();

    OWLOntology getOwlOntology();

    void delete();

}
